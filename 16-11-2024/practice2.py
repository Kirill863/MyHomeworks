# Задача 1: Обработка данных о координатах
# У вас есть список координат, каждая из которых представлена кортежем (x, y).
# Необходимо провести различные операции с этими данными.
#
# Задание:
# 1. Выведите все координаты.
# 2. Найдите сумму всех координат по оси x и по оси y.
# 3. Добавьте новую координату (70, 80).
# 4. Замените первую координату на (15, 25).
# 5. Выведите все координаты, отсортированные по оси x.
#
coordinates = [(10, 20), (30, 40), (50, 60)]

print("# 1. Выведите все координаты.")
print()
print(coordinates)
print()
print("# 2. Найдите сумму всех координат по оси x и по оси y.")
print()
print(f' Сумма по оси х = {int(coordinates[0][0]) + int(coordinates[1][0]) + int(coordinates[2][0])}')
print(f' Сумма по оси y = {int(coordinates[0][1]) + int(coordinates[1][1]) + int(coordinates[2][1])}')
print()
print("# 3. Добавьте новую координату (70, 80).")
coordinates.append((70, 80))
print()
print(coordinates)
print()
print("# 4. Замените первую координату на (15, 25).")
print()
coordinates[0] = (15, 25)
print(coordinates)
print()
print("# Выведите все координаты, отсортированные по оси x")
print(coordinates[0][0], coordinates[1][0], coordinates[2][0], coordinates[3][0])
print()

# Задача 2: Обработка данных о продуктах
# У вас есть список продуктов, каждый из которых представлен кортежем (название, цена).
# Необходимо провести различные операции с этими данными.
#
# Задание:
# 1. Выведите все продукты.
# 2. Найдите суммарную стоимость всех продуктов.
# 3. Добавьте новый продукт "Date" с ценой 4.
# 4. Замените цену "Apple" на 2.5.
# 5. Выведите все продукты, отсортированные по цене.
#
products = [("Apple", 2), ("Banana", 1), ("Cherry", 3)]

print('# 1. Выведите все продукты.')
print()
print(products)
print()
print('# 2. Найдите суммарную стоимость всех продуктов.')
print()
print(products[0][1] + products[1][1]+products[2][1])
print()
print('# 3. Добавьте новый продукт "Date" с ценой 4.')
print()
products.append(('Date' , 4))
print(products)
print()
print('4. Замените цену "Apple" на 2.5.')
print()
for i, product in enumerate(products):
    if product[0] == "Apple":
        products[i] = ("Apple", 2.5)
        break
print(products)
print()
sorted_products = sorted(products, key=lambda product: product[1])
print("Продукты, отсортированные по цене:")
for product in sorted_products:
    print(product)
print()
# Задача 3: Управление группами пользователей
# У вас есть множество пользователей, и вам необходимо выполнить различные операции с этими данными.
#
# Задание:
# 1. Выведите всех пользователей.
# 2. Добавьте нового пользователя "David".
# 3. Удалите пользователя "Bob".
# 4. Проверьте, есть ли пользователь "Alice" в множестве.
# 5. Выведите количество пользователей.
#
users = {"Alice", "Bob", "Charlie"}
print('# 1. Выведите всех пользователей.')
print()
print(users)
print()
print('# 2. Добавьте нового пользователя "David"')
users.add("David")
print(users)
print()
print('# 3. Удалите пользователя "Bob".')
users.discard('Bob')
print(users)
print('# 4. Проверьте, есть ли пользователь "Alice" в множестве.')
print()




# Задача 4: Управление наборами данных
# У вас есть два множества, представляющих различные наборы данных.
# Необходимо провести различные операции с этими множествами.
#
# Задание:
# 1. Выведите элементы обоих множеств.
# 2. Найдите объединение двух множеств.
# 3. Найдите пересечение двух множеств.
# 4. Найдите разность множеств `set1` и `set2`.
# 5. Проверьте, является ли `set2` подмножеством `set1`.
#
# set1 = {1, 2, 3, 4, 5}
# set2 = {4, 5, 6, 7, 8}

#
set1 = {1, 2, 3, 4, 5}
set2 = {4, 5, 6, 7, 8}

# 1.
print(set1)
print(set2)

# 2.
print(set1.union(set2))

# 3.
print(set1.intersection(set2))

# 4.
print(set1.difference(set2))

# 5.
print(set2.issubset(set1))
